@page "/profile"
@rendermode InteractiveServer
@using System.Text
@using System.Text.Json
@inject IHttpClientFactory HttpClientFactory

<h1>Login</h1>


<label for="email">
    Email:
    <InputText id="email" @bind-value="@_email"></InputText>
</label>
<label for="password">
    Password:
    <InputText id="password" type="password" @bind-value="@_password"></InputText>
</label>
<button type="button" @onclick="() => SignIn()">Sign in</button>

@if (_isLoggedIn)
{
    <p>Logged in</p>
}
else
{
    <p>Not logged in</p>
}

@code {
    private string _email = string.Empty;
    private string _password = string.Empty;
    private bool _isLoggedIn = false;

    private async Task SignIn()
    {
        var json = JsonSerializer.Serialize(new { email = _email, password = _password });
        var content = new StringContent(json, Encoding.UTF8, "application/json");
        using HttpClient? client = HttpClientFactory.CreateClient("WebshopMinimalApi");
        HttpResponseMessage response = await client.PostAsync("/Account/login?useCookies=true", content);
        _isLoggedIn = response.IsSuccessStatusCode;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            using HttpClient? client = HttpClientFactory.CreateClient("WebshopMinimalApi");
            HttpResponseMessage response = await client.GetAsync("/Account/users/me");
            _isLoggedIn = response.IsSuccessStatusCode;
            StateHasChanged();
        }
    }
}
