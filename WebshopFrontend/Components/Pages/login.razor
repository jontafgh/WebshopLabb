@page "/login"
@rendermode InteractiveServer
@using WebshopFrontend.Services.Interfaces
@inject IHttpClientFactory HttpClientFactory
@inject IUserService UserService

@if (_isLoggedIn)
{
    <p>Logged in</p>
}
else
{    <p>Log in:</p>

    <label for="email">
        Email:
        <InputText id="email" @bind-value="@_loginDto.Email"></InputText>
    </label>
    <label for="password">
        Password:
        <InputText id="password" type="password" @bind-value="@_loginDto.Password"></InputText>
    </label>
    <button type="button" @onclick="SignIn">Sign in</button>

    <p>@_message</p>
}

@code {
    private LoginDto _loginDto = new LoginDto();
    private bool _isLoggedIn = false;
    private string _message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _isLoggedIn = await UserService.GetIfLoggedIn();
    }

    private async Task SignIn()
    {
        try
        {
            _isLoggedIn = await UserService.LogInUser(_loginDto);
        }
        catch (Exception e)
        {
            _message = e.Message;
        }
    }
    
}
