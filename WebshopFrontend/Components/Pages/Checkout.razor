@page "/checkout"
@using WebshopShared.Validation
@inject ICartService CartService
@inject IOrderService OrderService
@inject ICounterService CounterService
@inject IUserService UserService

@if (_formSubmitted)
{
    <AuthorizeView>
        <OrderConfirmationDetails OrderId="_orderId" />
    </AuthorizeView>
}

else
{
    
        <Cart OnEmptyCart="HideUserDetailsForm" />
    
    <AuthorizeView>
        <Authorized>
            @if (!_cartEmpty)
            {
                <div class="white border padding-x padding-y">
                    <UserDetailsForm OnFormSubmit="OnFormSubmitted" />
                </div>
            }
        </Authorized>
        <NotAuthorized>
            <div class="white border padding-x padding-y">
                <strong>Please log in to continue</strong>
            </div>
            <LoginBox />

        </NotAuthorized>
    </AuthorizeView>
}

@code {
    private bool _formSubmitted;
    private bool _cartEmpty;

    private int _orderId;

    private async Task OnFormSubmitted(UserDetails userDetails)
    {
        await UserService.UpdateUserDetails(userDetails);

        var order = await OrderService.PlaceOrder();

        await CartService.ClearCart();
        await CartService.ClearUserCart();
        CounterService.SetCount(0);

        _orderId = order.Id;
        _formSubmitted = true;

        await InvokeAsync(StateHasChanged);
    }

    private void HideUserDetailsForm(bool arg)
    {
        _cartEmpty = arg;
    }

}
