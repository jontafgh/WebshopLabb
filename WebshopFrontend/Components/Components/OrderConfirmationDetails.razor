
@using WebshopFrontend.Services.Interfaces
@inject IOrderService OrderService


<table class="checkout-table">
    <caption>Order summary</caption>
    <thead>
        <tr>
            <th>Product</th>
            <th>ArNr</th>
            <th>DiscountPrice</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var orderLine in Order.CartItems)
        {
            <tr>
                <td data-label="Product">@orderLine.Name</td>
                <td data-label="ArNr">@orderLine.ArtNr</td>
                <td data-label="DiscountPrice">@orderLine.Price</td>
                <td data-label="Quantity">@orderLine.Quantity</td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th colspan="3">Total: </th>
            <td>
                @GetTotalPrice()
            </td>
        </tr>
    </tfoot>
</table>

<div>
    <h4>Confirmation email sent to:</h4>
    <p>@Order.User.Email</p>
</div>

<div>
    <h4>Order will be sent to:</h4>
    <ul>
        <li>@Order.User.FirstName @Order.User.LastName</li>
        <li>@Order.User.Address.Street</li>
        <li>@Order.User.Address.PostalCode @Order.User.Address.City</li>
        <li>@Order.User.Address.Country</li>
    </ul>
</div>

@code {
    public OrderDto Order { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Order = await OrderService.GetOrder(1);
    }

    private decimal GetTotalPrice() => Order.CartItems.Sum(x => x.Price * x.Quantity);
}
