@using WebshopFrontend.EventHandlers
@rendermode InteractiveServer
@inject IJSRuntime Js
@inject NotifyCartUpdated NotifyCartUpdated
@implements IDisposable

<NavLink href="checkout" class="text-gray">
    <div class="cart">
        <i class="fa badge fa-lg" style="font-size: 24px;" value="@_noOfItemsInCart">&#xf07a;</i>
    </div>
</NavLink>

@code {
    private int _noOfItemsInCart = 0;

    protected override async Task OnInitializedAsync()
    {
        NotifyCartUpdated.CartUpdated += UpdateCart;
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _noOfItemsInCart = await Js.InvokeAsync<int>("GetNumberOfProductsInLocalStorage");
        if (firstRender)
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    private async void UpdateCart(object? sender, EventArgs e)
    {
        _noOfItemsInCart =  await Js.InvokeAsync<int>("GetNumberOfProductsInLocalStorage");
       await InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        NotifyCartUpdated.CartUpdated -= UpdateCart;
    }

}
