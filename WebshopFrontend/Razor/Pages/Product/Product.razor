@page "/product/{ArtNr}"
@inject IApiSevice WebshopApiService

@if (_errorMessage is not null)
{
    <ImportantInfoBox>
        <h2>Failed to load product</h2>
        <p class="text-red">@_errorMessage</p>
    </ImportantInfoBox>
}
@if (_boardgame is not null)
{
    <PageTitle>@_boardgame.Product.Name</PageTitle>

    <div class="product-grid-container">
        <ProductHeading Product="_boardgame.Product"></ProductHeading>
        <ProductImages Product="_boardgame.Product"></ProductImages>
        <ProductPrice Product="_boardgame.Product"></ProductPrice>
        <BoardgameDetails Boardgame="_boardgame"></BoardgameDetails>
        <ProductStock Product="_boardgame.Product"></ProductStock>
    </div>
}

@code {
    [Parameter] public required string ArtNr { get; set; }

    private BoardgameDto? _boardgame;
    private string? _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        var result = await WebshopApiService.GetAsync<BoardgameDto>(string.Format(WebshopApiEndpoints.GetBoardgameByArtNr, ArtNr));

        if (result.IsSuccess)
        {
            _boardgame = result.Data;
        }
        else
        {
            _errorMessage = result.ErrorMessage;
        }
    }
}
