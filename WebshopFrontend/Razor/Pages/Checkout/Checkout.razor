@page "/checkout"
@using WebshopFrontend.Contracts
@using WebshopShared.Validation
@inject IOrderService OrderService
@inject ICounterService CounterService
@inject IUserService UserService

<PageTitle>Checkout</PageTitle>
<PageHeading>Checkout</PageHeading>

@if (_formSubmitted)
{
    <AuthorizeView>
        <OrderConfirmationDetails OrderId="_orderId" />
    </AuthorizeView>
}
else
{
    <Cart OnEmptyCart="HideUserDetailsForm" />
    <AuthorizeView>
        <Authorized>
            @if (!_cartEmpty) 
            {
                <ImportantInfoBox>Please comfirm your shipping details</ImportantInfoBox>

                <div class="white border padding-x padding-y">
                    <UserDetailsForm OnFormSubmit="OnFormSubmitted" />
                </div>
            }
        </Authorized>
        <NotAuthorized>
            <ImportantInfoBox>Please log in to continue</ImportantInfoBox>
            <LoginBox />

        </NotAuthorized>
    </AuthorizeView>
}

@code {
    [Inject(Key = "Local")] public ICartService LocalCartService { get; set; } = null!;
    [Inject(Key = "Api")] public ICartService ApiCartService { get; set; } = null!;

    private bool _formSubmitted;
    private bool _cartEmpty;
    private int _orderId;

    private async Task OnFormSubmitted(UserDetails userDetails)
    {
        await UserService.UpdateUserDetails(userDetails);

        var cart = await LocalCartService.GetCart();
        var order = await OrderService.PlaceOrder(cart);

        await LocalCartService.ClearCart();
        await ApiCartService.ClearCart();

        CounterService.SetCount(0);

        _orderId = order.Id;
        _formSubmitted = true;
    }

    private void HideUserDetailsForm(bool arg)
    {
        _cartEmpty = arg;
    }
}
